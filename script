const emojiMap = {
  ':jigsaw:': '🧩',
  ':shoe:': '👟',
  ':clipboard:': '📋',
  ':diamond:': '💎',
  ':chart:': '📊',
  ':green_square:': '🟩',
  ':blue_square:': '🟦',
  ':check_mark:': '✅',
  ':warning:': '⚠️'
};

let emojisOn = true;

function replaceEmojis(text) {
  if (!emojisOn) return text;
  return text.replace(/:[a-zA-Z0-9_]+:/g, match => emojiMap[match] || match);
}

function showSection(id) {
  document.querySelectorAll('.section').forEach(s => s.classList.remove('active'));
  document.querySelectorAll('.tab').forEach(t => t.classList.remove('active'));
  document.getElementById(id).classList.add('active');
  [...document.querySelectorAll('.tab')].find(t => t.textContent.includes(id === 'reports' ? 'Share' : id === 'guide' ? 'Guide' : 'Scripts')).classList.add('active');
}

document.getElementById('emojiToggle').addEventListener('click', () => {
  emojisOn = !emojisOn;
  document.getElementById('emojiToggle').innerText = emojisOn ? '😎 Emojis: ON' : '😐 Emojis: OFF';
  loadReports();
});

function toggleContent(header) {
  const content = header.nextElementSibling;
  content.classList.toggle('visible');
}

function copyText(content, btn) {
  navigator.clipboard.writeText(content).then(() => {
    btn.innerText = '✅ Copied';
    btn.classList.add('copied');
    setTimeout(() => {
      btn.innerText = '📋 Copy';
      btn.classList.remove('copied');
    }, 1500);
    showNotice("Click 'Apply formatting' in Slack after pasting.");
  });
}

function createCategory(cat, container) {
  const div = document.createElement('div');
  div.className = 'category';

  const header = document.createElement('div');
  header.className = 'category-header';
  header.onclick = () => toggleContent(header);

  const title = document.createElement('span');
  title.innerText = cat.title;

  const copyBtn = document.createElement('button');
  copyBtn.className = 'copy-btn';
  copyBtn.innerText = '📋 Copy';
  copyBtn.onclick = (e) => {
    e.stopPropagation();
    copyText(replaceEmojis(cat.content), copyBtn);
  };

  const content = document.createElement('div');
  content.className = 'category-content';
  content.innerText = replaceEmojis(cat.content);

  header.appendChild(title);
  header.appendChild(copyBtn);
  div.appendChild(header);
  div.appendChild(content);
  container.appendChild(div);
}

function loadReports() {
  fetch('data/Share Reports.json')
    .then(res => res.json())
    .then(data => {
      const container = document.getElementById('reportContainer');
      container.innerHTML = '';
      document.getElementById('error').innerText = '';
      data.forEach(cat => createCategory(cat, container));
    })
    .catch(() => {
      document.getElementById('error').innerText = '⚠️ Error loading reports';
    });
}

function loadGuide() {
  fetch('data/Problem Solve Guide.json')
    .then(res => res.json())
    .then(data => {
      const container = document.getElementById('guideContainer');
      container.innerHTML = '';
      data.forEach(cat => createCategory(cat, container));
    });
}

function loadScripts() {
  fetch('data/Tampermonkey Scripts.json')
    .then(res => res.json())
    .then(data => {
      const container = document.getElementById('scriptContainer');
      container.innerHTML = '';
      data.forEach(script => {
        const div = document.createElement('div');
        div.className = 'category';

        const header = document.createElement('div');
        header.className = 'category-header';
        header.onclick = () => toggleContent(header);

        const title = document.createElement('span');
        title.innerText = `${script.name || 'Untitled'}${script.author ? ' | ' + script.author : ''}${script.version ? ' | v' + script.version : ''}`;

        // 📋 Copy button
const copyBtn = document.createElement('button');
copyBtn.className = 'copy-btn';
copyBtn.innerText = '📋 Copy';
copyBtn.onclick = (e) => {
  e.stopPropagation();
  copyText(script.code, copyBtn);
};

// 📥 Download button
const downloadBtn = document.createElement('button');
downloadBtn.className = 'copy-btn';
downloadBtn.innerText = '📥 Download';
downloadBtn.onclick = (e) => {
  e.stopPropagation();
  downloadScriptAsFile(script);
};


        const content = document.createElement('div');
        content.className = 'category-content';
        content.innerText = `${script.description}\n\n${script.code}`;

        header.appendChild(title);
        header.appendChild(copyBtn);
        div.appendChild(header);
        div.appendChild(content);
        container.appendChild(div);
      });
    });
}

function showNotice(msg) {
  const notice = document.createElement('div');
  notice.innerText = msg;
  notice.style.position = 'fixed';
  notice.style.bottom = '20px';
  notice.style.right = '20px';
  notice.style.background = 'var(--accent)';
  notice.style.color = 'black';
  notice.style.padding = '0.7rem 1.2rem';
  notice.style.borderRadius = '10px';
  notice.style.boxShadow = '0 0 12px var(--accent)';
  notice.style.zIndex = 9999;
  document.body.appendChild(notice);
  setTimeout(() => document.body.removeChild(notice), 3000);
}

function toggleCountryStats() {
  const statsDiv = document.getElementById('countryStats');
  statsDiv.classList.toggle('visible');
}

async function fetchVisitStats() {
  try {
    const res = await fetch("https://script.google.com/macros/s/AKfycbx-3KNUSuOuui-ZtV6vwgwr7KOP-rjayDXtmsH5TP2J5hZgUjk47YAn1GwrzoJ_mgXu/exec");
    const data = await res.json();
    document.getElementById("visitInfo").innerText = `👁️ Total Visits: ${data.total}`;

    const countryStats = Object.entries(data)
      .filter(([key]) => key.startsWith("country_"))
      .map(([key, count]) => `${key.replace("country_", "").toUpperCase()}: ${count}`)
      .join(" | ");

    document.getElementById("countryStats").innerText = countryStats;
  } catch {
    document.getElementById("visitInfo").innerText = "👁️ Total Visits: Error";
  }
}

function setupSearch(idInput, idContainer) {
  const input = document.getElementById(idInput);
  input.addEventListener('input', () => {
    const term = input.value.toLowerCase();
    const items = document.getElementById(idContainer).querySelectorAll('.category');
    items.forEach(item => {
      const visible = item.innerText.toLowerCase().includes(term);
      item.style.display = visible ? '' : 'none';
    });
  });
}

loadReports();
loadGuide();
loadScripts();
fetchVisitStats();
setupSearch('reportSearch', 'reportContainer');
setupSearch('guideSearch', 'guideContainer');
setupSearch('scriptSearch', 'scriptContainer');
